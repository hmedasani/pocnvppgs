// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   description String? // Optional field
//   price       Decimal // Use Decimal for currency
//   image       String? // Optional field for image URL
//   category    Category @relation(fields: [categoryId], references: [id])
//   categoryId  Int
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   slug        String   @unique
//   category    String
//   description String
//   images     String[]  @db.Text[]      // PostgreSQL TEXT array
//   price       Decimal  @default(0.0) // maps to NUMERIC
//   brand       String
//   rating      Decimal  @default(0.0)
//   numReviews  Int      @default(0)
//   stock       Int      @default(0)
//   isFeatured  Boolean  @default(false)
//   banner      String? // nullable String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt

//   @@index([category])
//   @@index([isFeatured])
// }

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   slug        String   @unique(map: "product_slug_idx")
//   category    String
//   images      String[]
//   brand       String
//   description String
//   stock       Int
//   price       Decimal  @default(0) @db.Decimal(12, 2)
//   rating      Decimal  @default(0) @db.Decimal(3, 2)
//   numReviews  Int      @default(0)
//   isFeatured  Boolean  @default(false)
//   banner      String?
//   createdAt   DateTime @default(now()) @db.Timestamp(6)
// }

model Product {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  slug        String   @unique(map: "product_slug_idx")
  category    String
  images      String[]
  brand       String
  description String
  stock       Int
  price       Decimal  @default(0) @db.Decimal(12, 2)
  rating      Decimal  @default(0) @db.Decimal(3, 2)
  numReviews  Int      @default(0)
  isFeatured  Boolean  @default(false)
  banner      String?
  createdAt   DateTime @default(now()) @db.Timestamp(6)
}

// model Product {
//   id          Int      @id @default(autoincrement())
//   name        String
//   slug        String
//   category    String
//   images      String[]
//   brand       String
//   description String
//   stock       Int
//   price       Int      @default(0)
//   rating      Int      @default(0)
//   numReviews  Int      @default(0)
//   isFeatured  Boolean  @default(false)
//   banner      String?
//   createdAt   DateTime @default(now()) @db.Timestamp(6)
// }
